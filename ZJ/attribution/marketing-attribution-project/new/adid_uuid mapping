drop table if exists adhoc_data.adid_uuid_mapping

CREATE TABLE adhoc_data.adid_uuid_mapping AS 
with ranked_mapping as (
select 
	adid,
		user_uuid,
		created_at_dt
from
	dds.sd__adjust_data sad
where
	user_uuid notnull
	-- NULL values are saved AS 'nan' IN the raw Adjust table 
	and user_uuid != 'nan'
	-- One user UUID can be related to multiple ADIDs (Adjust Id), like WHEN the Talent logs IN to their account on a new device. 
	-- This window function gets the most recent UUID<>ADID association. 
	QUALIFY row_number() over (
		partition by user_uuid,
	adid
order by
	created_at_dt desc
	) = 1
	-- Only get records in the last year
	and created_at_dt >= current_date - interval '1' year 
)
select
	adid,
	user_uuid,
	created_at_dt,
	row_number() over (partition by adid order by created_at_dt desc) as mapping_rank_adid,
	row_number() over (partition by user_uuid order by created_at_dt desc) as mapping_rank_uuid
from
	ranked_mapping

	
	
	
	select * from adhoc_data.adid_uuid_mapping aum
	where user_uuid = '763d3fab-5e7a-486c-aeb8-d87cb008376d'
	limit 199